info:
  title: ABCall
  description: ''
  version: 1.0.0
tags:
  - name: testing
basePath: /api
paths:
  /v1/health/client:
    get:
      summary: Health check
      deprecated: false
      description: >-
        This endpoint allows to check the health and availability of the
        ClientService API endpoints. It returns a status code indicating the
        health of the API.
      operationId: healthClient
      tags: []
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          schema:
            type: object
            properties:
              status:
                type: string
                description: Status
            required:
              - status
      security: []
      produces:
        - application/json
      x-google-backend:
        address: "${client_url}"
        protocol: h2
        path_translation: APPEND_PATH_TO_ADDRESS
  /v1/auth/employee:
    post:
      summary: Authenticate employee
      deprecated: false
      description: >-
        Authenticates an employee (administrator, analyst, or agent) and
        generates a JWT authentication token for subsequent API requests.


        - If the user is not found or the password is wrong, the API returns a
        401 Unauthorized error.

        - If the request is not valid JSON or is missing required fields, a 400
        Bad Request error is returned.
      operationId: authEmployee
      tags: []
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              username:
                type: string
                description: The employee's username.
              password:
                type: string
                description: The employee's password.
            required:
              - username
              - password
      responses:
        '200':
          description: ''
          headers: {}
          schema:
            type: object
            properties:
              token:
                type: string
            required:
              - token
        '400':
          description: ''
          headers: {}
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: ''
          headers: {}
          schema:
            $ref: '#/definitions/Error'
      security: []
      consumes:
        - application/json
      produces:
        - application/json
      x-google-backend:
        address: "${client_url}"
        protocol: h2
        path_translation: APPEND_PATH_TO_ADDRESS
  /v1/clients:
    get:
      summary: List clients
      deprecated: false
      description: Returns the list of clients (companies)
      operationId: listClients
      tags: []
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  description: ID of the client
                name:
                  type: string
                  description: Name of the client
              required:
                - id
                - name
      security: []
      produces:
        - application/json
      x-google-backend:
        address: "${client_url}"
        protocol: h2
        path_translation: APPEND_PATH_TO_ADDRESS
  /v1/clients/{clientId}:
    get:
      summary: Get client
      deprecated: false
      description: Returns the the information of a client (company)
      operationId: getClient
      tags: []
      parameters:
        - name: clientId
          in: path
          description: ID of the client to retrieve
          required: true
          type: string
          x-example: f0d2e958-f503-462e-b0f1-911c23b2e008
      responses:
        '200':
          description: ''
          headers: {}
          schema:
            type: object
            properties:
              id:
                type: string
                description: ID of the client
              name:
                type: string
                description: Name of the client
            required:
              - id
              - name
        '404':
          description: ''
          headers: {}
          schema:
            $ref: '#/definitions/Error'
      security: []
      produces:
        - application/json
      x-google-backend:
        address: "${client_url}"
        protocol: h2
        path_translation: APPEND_PATH_TO_ADDRESS
  /v1/reset/client:
    post:
      summary: Reset database
      deprecated: false
      description: Reset database and optionally load demo data.
      operationId: resetClient
      tags:
        - testing
      parameters:
        - name: demo
          in: query
          description: Set to true to load demo data, false otherwise.
          required: false
          type: boolean
          x-example: false
      responses:
        '200':
          description: ''
          headers: {}
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
            required:
              - status
      security:
        - tokenDeveloper: []
      produces:
        - application/json
      x-google-backend:
        address: "${client_url}"
        protocol: h2
        path_translation: APPEND_PATH_TO_ADDRESS
  /v1/health/user:
    get:
      summary: Health check
      deprecated: false
      description: >-
        This endpoint allows to check the health and availability of the
        UserService API endpoints. It returns a status code indicating the
        health of the API.
      operationId: healthUser
      tags: []
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          schema:
            type: object
            properties:
              status:
                type: string
                description: Status
            required:
              - status
      security: []
      produces:
        - application/json
      x-google-backend:
        address: "${user_url}"
        protocol: h2
        path_translation: APPEND_PATH_TO_ADDRESS
  /v1/auth/user:
    post:
      summary: Authenticate user
      deprecated: false
      description: >-
        Authenticates a user (of a client) and generates a JWT authentication
        token for subsequent API requests.


        - If the user is not found or the password is wrong, the API returns a
        401 Unauthorized error.

        - If the request is not valid JSON or is missing required fields, a 400
        Bad Request error is returned.
      operationId: authUser
      tags: []
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              username:
                type: string
                description: The user's username.
              password:
                type: string
                description: The user's password.
            required:
              - username
              - password
      responses:
        '200':
          description: ''
          headers: {}
          schema:
            type: object
            properties:
              token:
                type: string
            required:
              - token
        '400':
          description: ''
          headers: {}
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: ''
          headers: {}
          schema:
            $ref: '#/definitions/Error'
      security: []
      consumes:
        - application/json
      produces:
        - application/json
      x-google-backend:
        address: "${user_url}"
        protocol: h2
        path_translation: APPEND_PATH_TO_ADDRESS
  /v1/reset/user:
    post:
      summary: Reset database
      deprecated: false
      description: Reset database and optionally load demo data.
      operationId: resetUser
      tags:
        - testing
      parameters:
        - name: demo
          in: query
          description: Set to true to load demo data, false otherwise.
          required: false
          type: boolean
          x-example: false
      responses:
        '200':
          description: ''
          headers: {}
          schema:
            type: object
            properties:
              status:
                type: string
                description: status
            required:
              - status
      security:
        - tokenDeveloper: []
      produces:
        - application/json
      x-google-backend:
        address: "${user_url}"
        protocol: h2
        path_translation: APPEND_PATH_TO_ADDRESS
  /v1/users/me:
    get:
      summary: User info
      deprecated: false
      description: Returns information about the user making the request.
      operationId: userInfo
      tags: []
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
          schema:
            type: object
            properties:
              id:
                type: string
                description: ID of the user
              clientId:
                type: string
                description: ID of the associated client
              name:
                type: string
                description: Name of the user
              email:
                type: string
                description: Email of the user
            required:
              - id
              - clientId
              - name
              - email
        '401':
          description: ''
          headers: {}
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: ''
          headers: {}
          schema:
            $ref: '#/definitions/Error'
      security:
        - tokenUser: []
      produces:
        - application/json
      x-google-backend:
        address: "${user_url}"
        protocol: h2
        path_translation: APPEND_PATH_TO_ADDRESS
  /v1/users:
    post:
      summary: Create user
      deprecated: false
      description: Creates a new user account for a client (company).
      operationId: userCreate
      tags: []
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              clientId:
                type: string
                description: ID of the associated client
              name:
                type: string
                description: Name of the user
              email:
                type: string
                description: Email of the user
              password:
                type: string
                description: Password of the user
            required:
              - clientId
              - name
              - email
              - password
      responses:
        '201':
          description: ''
          headers: {}
          schema:
            type: object
            properties:
              id:
                type: string
                description: ID of the user
              clientId:
                type: string
                description: ID of the associated client
              name:
                type: string
                description: Name of the user
              email:
                type: string
                description: Email of the user
            required:
              - id
              - clientId
              - name
              - email
        '400':
          description: ''
          headers: {}
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: ''
          headers: {}
          schema:
            $ref: '#/definitions/Error'
      security: []
      consumes:
        - application/json
      produces:
        - application/json
      x-google-backend:
        address: "${user_url}"
        protocol: h2
        path_translation: APPEND_PATH_TO_ADDRESS
swagger: '2.0'
definitions:
  Error:
    type: object
    properties:
      message:
        type: string
      code:
        type: number
    required:
      - message
      - code
securityDefinitions:
  tokenDeveloper:
    authorizationUrl: ""
    flow: "implicit"
    type: "oauth2"
    x-google-issuer: "${jwt_issuer}"
    x-google-jwks_uri: "${jwt_jwks}"
    x-google-jwt-locations:
    - header: "Authorization"
      value_prefix: "Bearer "
    x-google-audiences: "developer"
  tokenUser:
    authorizationUrl: ""
    flow: "implicit"
    type: "oauth2"
    x-google-issuer: "${jwt_issuer}"
    x-google-jwks_uri: "${jwt_jwks}"
    x-google-jwt-locations:
    - header: "Authorization"
      value_prefix: "Bearer "
    x-google-audiences: "user"
x-components: {}
